import BaseComponent from"../core/base-component.js";import DataManager from"../core/data-manager.js";class NavigationEnhanced extends BaseComponent{constructor(options={}){super(options),this.dataManager=options.dataManager||new DataManager,this.currentPage=this.detectCurrentPage(),this.currentLineage=this.detectCurrentLineage(),this.recentPages=this.loadRecentPages()}async render(){if(document.querySelector(".enhanced-nav"))return void console.log("Enhanced navigation already present");const navHtml=await this.generateNavigationHTML();this.injectNavigation(navHtml),this.element=document.querySelector(".enhanced-nav"),"person"===this.currentPage.type&&await this.enhanceWithFamilyContext()}async generateNavigationHTML(){const breadcrumbs=await this.generateBreadcrumbs(),familyNav=await this.generateFamilyNavigation();return`\n      <nav class="enhanced-nav" role="navigation" aria-label="Main navigation">\n        \x3c!-- Primary Navigation Bar --\x3e\n        <div class="primary-nav">\n          <div class="nav-container">\n            <div class="nav-brand">\n              <a href="/auntruth/new/">AuntieRuth.com</a>\n            </div>\n\n            <div class="nav-controls ${this.mobile?"mobile":"desktop"}">\n              ${this.mobile?this.generateMobileMenu():this.generateDesktopMenu()}\n            </div>\n          </div>\n        </div>\n\n        \x3c!-- Breadcrumb Navigation --\x3e\n        ${breadcrumbs?`<div class="breadcrumb-nav">${breadcrumbs}</div>`:""}\n\n        \x3c!-- Family Navigation (person pages only) --\x3e\n        ${familyNav?`<div class="family-nav">${familyNav}</div>`:""}\n      </nav>\n    `}async generateBreadcrumbs(){if("index"===this.currentPage.type)return null;let breadcrumbs='<nav class="breadcrumbs" aria-label="Breadcrumb">';if(breadcrumbs+='<a href="/auntruth/new/">Home</a>',this.currentLineage){breadcrumbs+=" â€º ";breadcrumbs+=`<a href="${`/auntruth/new/htm/L${this.currentLineage.number}/`}">${this.currentLineage.name}</a>`}return"person"===this.currentPage.type&&this.currentPage.title&&(breadcrumbs+=" â€º ",breadcrumbs+=`<span class="current">${this.currentPage.title}</span>`),breadcrumbs+="</nav>",breadcrumbs}async generateFamilyNavigation(){if("person"!==this.currentPage.type)return null;try{const personId=this.currentPage.pageId;if(!personId)return null;const personData=await this.dataManager.getPersonData(personId);if(!personData)return console.log(`No person data found for ID: ${personId}`),null;let familyNav='<div class="family-navigation">';if(personData.father||personData.mother){if(familyNav+='<div class="family-group">',familyNav+='<span class="family-label">Parents:</span>',familyNav+='<div class="family-links">',personData.father){const fatherId=this.extractPersonId(personData.father);fatherId&&(familyNav+=`<a href="XF${fatherId}.htm" class="family-link">Father: ${this.extractPersonName(personData.father)}</a>`)}if(personData.mother){const motherId=this.extractPersonId(personData.mother);motherId&&(familyNav+=`<a href="XF${motherId}.htm" class="family-link">Mother: ${this.extractPersonName(personData.mother)}</a>`)}familyNav+="</div></div>"}const spouses=["spouse","spouse2","spouse3","spouse4"].map(key=>personData[key]).filter(Boolean);return spouses.length>0&&(familyNav+='<div class="family-group">',familyNav+='<span class="family-label">Spouse(s):</span>',familyNav+='<div class="family-links">',spouses.forEach(spouse=>{const spouseId=this.extractPersonId(spouse);if(spouseId){const spouseName=this.extractPersonName(spouse);familyNav+=`<a href="XF${spouseId}.htm" class="family-link">${spouseName}</a>`}}),familyNav+="</div></div>"),familyNav+='<div class="family-group">',familyNav+=`<a href="THF${personId}.htm" class="family-link photos-link">ðŸ“· View Photos</a>`,familyNav+="</div>",familyNav+="</div>",familyNav}catch(error){return console.error("Failed to generate family navigation:",error),null}}generateMobileMenu(){return`\n      <button class="mobile-menu-toggle" aria-expanded="false" aria-controls="mobile-menu">\n        <span class="sr-only">Toggle navigation</span>\n        <span class="menu-icon"></span>\n      </button>\n      <div class="mobile-menu" id="mobile-menu" hidden>\n        <a href="/auntruth/new/" class="menu-item">Home</a>\n        <a href="/auntruth/new/search/" class="menu-item">Search</a>\n        <button class="menu-item lineage-toggle" aria-expanded="false">\n          Lineages <span class="arrow">â–¼</span>\n        </button>\n        <div class="lineage-submenu" hidden>\n          ${this.generateLineageLinks()}\n        </div>\n        <a href="/auntruth/htm/" class="menu-item">Original Site</a>\n      </div>\n    `}generateDesktopMenu(){return`\n      <ul class="desktop-menu">\n        <li><a href="/auntruth/new/" class="menu-item">Home</a></li>\n        <li><a href="/auntruth/new/search/" class="menu-item">Search</a></li>\n        <li class="dropdown">\n          <button class="menu-item dropdown-toggle" aria-expanded="false">\n            Lineages <span class="arrow">â–¼</span>\n          </button>\n          <ul class="dropdown-menu" hidden>\n            ${this.generateLineageLinks("li")}\n          </ul>\n        </li>\n        <li><a href="/auntruth/htm/" class="menu-item">Original Site</a></li>\n      </ul>\n    `}generateLineageLinks(wrapper="div"){return[{id:"1",name:"Hagborg-Hansson"},{id:"2",name:"Nelson"},{id:"3",name:"Pringle-Hambley"},{id:"4",name:"Lathrop-Lothropp"},{id:"5",name:"Ward"},{id:"6",name:"Selch-Weiss"},{id:"7",name:"Stebbe"},{id:"8",name:"Lentz"},{id:"9",name:"Phoenix-Rogerson"}].map(lineage=>{const isCurrent=this.currentLineage?.number===lineage.id,link=`<a href="/auntruth/new/htm/L${lineage.id}/" class="lineage-link ${isCurrent?"current":""}">${lineage.name}</a>`;return"li"===wrapper?`<li>${link}</li>`:link}).join("")}injectNavigation(navHtml){document.body.insertAdjacentHTML("afterbegin",navHtml),document.body.style.paddingTop=this.mobile?"120px":"80px"}attachEventListeners(){const mobileToggle=this.$(".mobile-menu-toggle"),mobileMenu=this.$(".mobile-menu");mobileToggle&&mobileMenu&&mobileToggle.addEventListener("click",()=>{const expanded="true"===mobileToggle.getAttribute("aria-expanded");mobileToggle.setAttribute("aria-expanded",!expanded),mobileMenu.hidden=expanded});const dropdownToggle=this.$(".dropdown-toggle"),dropdownMenu=this.$(".dropdown-menu");dropdownToggle&&dropdownMenu&&(dropdownToggle.addEventListener("click",e=>{e.preventDefault();const expanded="true"===dropdownToggle.getAttribute("aria-expanded");dropdownToggle.setAttribute("aria-expanded",!expanded),dropdownMenu.hidden=expanded}),document.addEventListener("click",e=>{e.target.closest(".dropdown")||(dropdownToggle.setAttribute("aria-expanded","false"),dropdownMenu.hidden=!0)}));const lineageToggle=this.$(".lineage-toggle"),lineageSubmenu=this.$(".lineage-submenu");lineageToggle&&lineageSubmenu&&lineageToggle.addEventListener("click",()=>{const expanded="true"===lineageToggle.getAttribute("aria-expanded");lineageToggle.setAttribute("aria-expanded",!expanded),lineageSubmenu.hidden=expanded})}detectCurrentPage(){const path=window.location.pathname,filename=path.split("/").pop()||"index.html";let type="unknown",pageId=null,title=document.title||"";return filename.startsWith("XF")?(type="person",pageId=filename.replace(".htm","").replace(".html","").replace("XF","")):filename.startsWith("THF")?(type="thumbnail",pageId=filename.replace(".htm","").replace(".html","").replace("THF","")):"index.htm"!==filename&&"index.html"!==filename||(type="index"),title=title.replace("<br>AuntieRuth.com","").replace("AuntieRuth.com","").trim(),{path:path,filename:filename,type:type,pageId:pageId,title:title,url:window.location.href}}detectCurrentLineage(){const match=window.location.pathname.match(/\/L(\d+)\//);if(!match)return null;const number=match[1];return{number:number,name:{0:"All",1:"Hagborg-Hansson",2:"Nelson",3:"Pringle-Hambley",4:"Lathrop-Lothropp",5:"Ward",6:"Selch-Weiss",7:"Stebbe",8:"Lentz",9:"Phoenix-Rogerson"}[number]||`Lineage ${number}`,path:`/auntruth/new/htm/L${number}/`}}extractPersonId(text){if(!text)return null;const match=text.match(/\[(\d+)\]/);return match?match[1]:null}extractPersonName(text){return text?text.replace(/\s*\[\d+\]\s*$/,"").trim():text}loadRecentPages(){try{return JSON.parse(localStorage.getItem("recentPages")||"[]")}catch{return[]}}saveCurrentPage(){if("person"===this.currentPage.type){const recent=this.loadRecentPages(),pageData={title:this.currentPage.title,url:this.currentPage.url,timestamp:Date.now()},filtered=recent.filter(page=>page.url!==pageData.url);filtered.unshift(pageData);const limited=filtered.slice(0,10);try{localStorage.setItem("recentPages",JSON.stringify(limited))}catch{}}}async enhanceWithFamilyContext(){this.saveCurrentPage()}}export default NavigationEnhanced;window.NavigationEnhanced=NavigationEnhanced;